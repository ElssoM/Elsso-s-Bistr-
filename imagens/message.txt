<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Blackjack Simples</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      background-color: #2b2b2b;
      color: white;
    }
    #game-container {
      margin: 20px auto;
      max-width: 600px;
      background: #444;
      border-radius: 10px;
      padding: 20px;
    }
    button {
      padding: 10px 20px;
      margin: 10px;
      font-size: 16px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    button#hit {
      background: #4caf50;
      color: white;
    }
    button#stand {
      background: #f44336;
      color: white;
    }
    #results {
      margin-top: 20px;
    }
    #dealer, #player {
      margin: 10px 0;
    }
    img {
      width: 60px;
      margin: 5px;
    }
  </style>
</head>
<body>
  <h1>Blackjack Simples</h1>
  <div id="game-container">
    <div id="dealer">
      <h2>Mesa</h2>
      <div id="dealer-cards"></div>
      <p id="dealer-score">Pontuação: 0</p>
    </div>
    <div id="player">
      <h2>Você</h2>
      <div id="player-cards"></div>
      <p id="player-score">Pontuação: 0</p>
    </div>
    <button id="hit">Pedir Carta</button>
    <button id="stand">Parar</button>
    <div id="results"></div>
    <p id="scoreboard">Pontuação Total: 0</p>
  </div>

  <script>
    const apiBase = 'https://deckofcardsapi.com/api/deck/';
    let deckId;
    let playerHand = [];
    let dealerHand = [];
    let playerScore = 0;
    let dealerScore = 0;
    let totalScore = 0;

    async function initializeGame() {
      const response = await fetch(`${apiBase}new/shuffle/?deck_count=1`);
      const data = await response.json();
      deckId = data.deck_id;
      resetGame();
    }

    function resetGame() {
      playerHand = [];
      dealerHand = [];
      playerScore = 0;
      dealerScore = 0;
      document.getElementById("player-cards").innerHTML = '';
      document.getElementById("dealer-cards").innerHTML = '';
      document.getElementById("results").textContent = '';
      updateScores();
      drawCard(playerHand, "player", true);
      drawCard(playerHand, "player", true);
      drawCard(dealerHand, "dealer", true);
    }

    async function drawCard(hand, owner, visible = true) {
      const response = await fetch(`${apiBase}${deckId}/draw/?count=1`);
      const data = await response.json();
      const card = data.cards[0];
      hand.push(card);
      updateUI(card, owner, visible);
      calculateScores();
    }

    function updateUI(card, owner, visible) {
      const container = document.getElementById(`${owner}-cards`);
      const img = document.createElement('img');
      img.src = visible ? card.image : 'https://via.placeholder.com/60x85.png?text=Hidden';
      container.appendChild(img);
    }

    function calculateScores() {
      playerScore = calculateHand(playerHand);
      dealerScore = calculateHand(dealerHand);
      updateScores();

      if (playerScore > 21) {
        totalScore -= 20;
        alert('Você perdeu! Passou de 21!');
        resetGame();
      }
    }

    function calculateHand(hand) {
      let total = 0;
      let aces = 0;

      hand.forEach(card => {
        if (card.value === 'ACE') {
          aces += 1;
          total += 11;
        } else if (['KING', 'QUEEN', 'JACK'].includes(card.value)) {
          total += 10;
        } else {
          total += parseInt(card.value);
        }
      });

      while (total > 21 && aces) {
        total -= 10;
        aces -= 1;
      }

      return total;
    }

    function updateScores() {
      document.getElementById("player-score").textContent = `Pontuação: ${playerScore}`;
      document.getElementById("dealer-score").textContent = `Pontuação: ${dealerScore}`;
      document.getElementById("scoreboard").textContent = `Pontuação Total: ${totalScore}`;
    }

    async function stand() {
      while (dealerScore < 17) {
        await drawCard(dealerHand, "dealer", true);
      }

      determineWinner();
    }

    function determineWinner() {
      if (dealerScore > 21 || playerScore > dealerScore) {
        totalScore += 10;
        alert('Você venceu!');
      } else if (playerScore === dealerScore) {
        alert('Empate!');
      } else {
        totalScore -= 20;
        alert('Você perdeu!');
      }
      resetGame();
    }

    document.getElementById("hit").addEventListener("click", () => drawCard(playerHand, "player", true));
    document.getElementById("stand").addEventListener("click", stand);

    initializeGame();
  </script>
</body>
</html>
